/*
 * ServiceBrowserPanel.java
 *
 */
package co.frakasoft.oraesb.gui;

import co.frakasoft.oraesb.beans.service.Metadata;
import co.frakasoft.oraesb.beans.service.System;
import co.frakasoft.oraesb.beans.util.BasicESBEntityInfo;
import co.frakasoft.oraesb.beans.util.BasicMetadataInfo;
import co.frakasoft.oraesb.beans.util.BasicServiceGroupInfo;
import co.frakasoft.oraesb.beans.util.BasicServiceInfo;
import co.frakasoft.oraesb.beans.util.BasicSystemInfo;
import co.frakasoft.oraesb.util.BeansUtil;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author  Administrador
 */
public class ServiceBrowserPanel extends javax.swing.JPanel {

    /** Creates new form ServiceBrowserPanel */
    public ServiceBrowserPanel() {
        initComponents();
        try {
            java.net.URL imgURL = ServiceBrowserPanel.class.getResource("/img/gears.gif");
            ImageIcon leafIcon = new ImageIcon(imgURL);
            DefaultTreeCellRenderer renderer = new DefaultTreeCellRenderer();
            renderer.setLeafIcon(leafIcon);
            imgURL = ServiceBrowserPanel.class.getResource("/img/server.gif");
            ImageIcon parentIcon = new ImageIcon(imgURL);
            renderer.setOpenIcon(parentIcon);
            renderer.setClosedIcon(parentIcon);
            treeServiceBrowser.setCellRenderer(renderer);
        } catch (Exception e) {
            java.lang.System.out.println("Exception: " + e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrlServiceBrowser = new javax.swing.JScrollPane();
        // esalaza: pre-creation code
        treeServiceBrowser = new co.frakasoft.oraesb.gui.ServiceBrowserTree();
        // esalaza: post-creation code

        scrlServiceBrowser.setViewportView(treeServiceBrowser);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlServiceBrowser, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlServiceBrowser, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /*
    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
        List<System> systems = metadata.getSystem();
        List<BasicSystemInfo> basicSystems = new ArrayList<BasicSystemInfo>();
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Sistemas");
        for(System system : systems) {
            BasicSystemInfo basicSystemInfo = new BasicSystemInfo();
            BeansUtil.assignESBMetadataToBasicBeans(system, basicSystemInfo);
            basicSystems.add(basicSystemInfo);
            assignBasicBeansToJTree(basicSystemInfo, top);
        }
        treeServiceBrowser.setModel(new DefaultTreeModel(top));
    }
     */

    public void setMetadata(Metadata metadata) {
        this.metadata = metadata;
        List<System> systems = metadata.getSystem();
        List<BasicSystemInfo> basicSystems = new ArrayList<BasicSystemInfo>();
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Sistemas");
        for(System system : systems) {
            BasicSystemInfo basicSystemInfo = null;
            basicSystemInfo = BeansUtil.system2BasicSystem(system);
            basicSystems.add(basicSystemInfo);
            assignBasicBeansToJTree(basicSystemInfo, top);
        }
        treeServiceBrowser.setModel(new DefaultTreeModel(top));
    }

    public void setMetadata(BasicMetadataInfo metadata) {
        this.basicMetadata = metadata;
        List<BasicSystemInfo> systems = metadata.getSystems();
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Sistemas");
        for(BasicSystemInfo system : systems) {
            assignBasicBeansToJTree(system, top);
        }
        treeServiceBrowser.setModel(new DefaultTreeModel(top));
    }
    
    private void assignBasicBeansToJTree(BasicESBEntityInfo basicESBEntityInfo, DefaultMutableTreeNode treeNode) {
        if(basicESBEntityInfo instanceof BasicSystemInfo) {
            BasicSystemInfo basicSystemInfo = (BasicSystemInfo)basicESBEntityInfo;
            DefaultMutableTreeNode systemNode = new DefaultMutableTreeNode(basicSystemInfo);
            treeNode.add(systemNode);
            List<Object> serviceGroupsOrServices = basicSystemInfo.getServiceGroupsOrServices();
            for(Object serviceGroupOrService : serviceGroupsOrServices) {
                BasicESBEntityInfo basicESBEntity = (BasicESBEntityInfo)serviceGroupOrService;
                assignBasicBeansToJTree(basicESBEntity, systemNode);
            }
        } else if(basicESBEntityInfo instanceof BasicServiceGroupInfo) {
            BasicServiceGroupInfo basicServiceGroupInfo = (BasicServiceGroupInfo)basicESBEntityInfo;
            DefaultMutableTreeNode serviceGroupNode = new DefaultMutableTreeNode(basicServiceGroupInfo);
            treeNode.add(serviceGroupNode);
            List<Object> serviceGroupsOrServices = basicServiceGroupInfo.getServiceGroupsOrServices();
            for(Object serviceGroupOrService : serviceGroupsOrServices) {
                BasicESBEntityInfo basicESBEntity = (BasicESBEntityInfo)serviceGroupOrService;
                assignBasicBeansToJTree(basicESBEntity, serviceGroupNode);
            }
        } else if(basicESBEntityInfo instanceof BasicServiceInfo) {
            BasicServiceInfo basicServiceInfo = (BasicServiceInfo)basicESBEntityInfo;
            DefaultMutableTreeNode serviceLeaf = new DefaultMutableTreeNode(basicServiceInfo);
            treeNode.add(serviceLeaf);
        }
    }
    
    public JTree getServiceBrowserTree() {
        return treeServiceBrowser;
    }

    private BasicMetadataInfo basicMetadata = null;
    private Metadata metadata = null;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrlServiceBrowser;
    private javax.swing.JTree treeServiceBrowser;
    // End of variables declaration//GEN-END:variables

}
